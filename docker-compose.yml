version: '3.9'
name: tg-drive
services:
  rabbitmq-bus:
    image: rabbitmq:3.10.7-alpine
    container_name: rabbitmq-bus
    env_file:
      - path: config/env/rabbitmq.env
    ports:
      - "5672:5672"
      - "15672:15672"
      - "25672:25672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 10s
      retries: 10

  mysql-db:
    image: mysql:8.0.35
    container_name: mysql-db
    env_file:
      - path: config/env/mysql.env
    ports:
      - "3306:3306"
    volumes:
      - mysqldb:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 10

  bot-host:
    build:
      context: aspnet-core
      dockerfile: BotHost/Dockerfile
    container_name: bot-host
    env_file:
      - path: config/env/tgdrive_host.env
    depends_on:
      rabbitmq-bus:
        condition: service_healthy
      mysql-db:
        condition: service_healthy

  webapi:
    build:
      context: aspnet-core
      dockerfile: ServicesWebApi/Dockerfile
    container_name: webapi
    env_file:
      - path: config/env/tgdrive_webapi.env
    ports:
      - "5050:5050"
      - "5051:5051"
    volumes:
      - ${TGDRIVE_CERT_PATH}:/https/
    depends_on:
      rabbitmq-bus:
        condition: service_healthy
      mysql-db:
        condition: service_healthy

  angular:
    build:
      context: angular
      additional_contexts:
        config: config
    container_name: angular
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - bot-host
      - webapi

volumes:
  mysqldb:
